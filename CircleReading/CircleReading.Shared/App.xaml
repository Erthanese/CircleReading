<Application
    x:Class="CircleReading.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CircleReading"
    xmlns:conv="using:WinRTXamlToolkit.Converters"
    >

    <Application.Resources>
        <x:String x:Key="Qustion1">
            How many CF-18 jet fighters used?
        </x:String>
        <x:String x:Key="Qustion2">
            What is the Initial of the enemy?
        </x:String>
        <x:String x:Key="Qustion3">
           How many monthes dose the Canada's mission get approved?
        </x:String>
        <SolidColorBrush x:Key="AppAcentColorBrush" Color="{ThemeResource SystemColorControlAccentColor}"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="White"/>
        <SolidColorBrush x:Key="ScreenBoundryBrush" Color="Black"/>
        <SolidColorBrush x:Key="ForegroundBrush" Color="Black"/>
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <x:String x:Key="htmlString" >
            ms-appx-web:///Articles/Article1.html
        </x:String>
        <Style x:Key="PureButtonStyle" TargetType="Button">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter
				  Margin="{TemplateBinding Control.Padding}"
				  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
				  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
				  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
				  Content="{TemplateBinding ContentControl.Content}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="AppBarButton">
            <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
            <Setter Property="Background" Value="{ThemeResource AppBarItemBackgroundThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarButton">
                        <Grid x:Name="RootGrid" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <!-- FullSize is used when we are in landscape or filled mode -->
                                    <VisualState x:Name="FullSize"/>
                                    <!-- Compact is used when we are in portrait or snapped mode -->
                                    <VisualState x:Name="Compact">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverBackgroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPointerOverForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundEllipse" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemPressedForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineEllipse" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarItemDisabledForegroundThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation
							Storyboard.TargetName="FocusVisualWhite"
							Storyboard.TargetProperty="Opacity"
							To="1"
							Duration="0"/>
                                            <DoubleAnimation
							Storyboard.TargetName="FocusVisualBlack"
							Storyboard.TargetProperty="Opacity"
							To="1"
							Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <StackPanel Margin="0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="{TemplateBinding Width}">
                                <Grid Margin="0" HorizontalAlignment="Stretch" Height="{TemplateBinding Width}" Width="{TemplateBinding Width}">
                                    <Ellipse
					x:Name="BackgroundEllipse"
					UseLayoutRounding="False"
					Fill="{TemplateBinding Background}"/>
                                    <Ellipse
					x:Name="OutlineEllipse"
					UseLayoutRounding="False"
					Stroke="{TemplateBinding BorderBrush}"
					StrokeThickness="2" />
                                    <Viewbox Margin="{TemplateBinding Padding}">
                                        <ContentPresenter
					                        x:Name="Content"
					                        Content="{TemplateBinding Icon}"
					                        Foreground="{TemplateBinding Foreground}"
					                        HorizontalAlignment="Stretch"
					                        VerticalAlignment="Stretch"
					                        AutomationProperties.AccessibilityView="Raw"/>
                                    </Viewbox>
                                </Grid>
                                <TextBlock
				  x:Name="TextLabel"
				  Text="{TemplateBinding Label}"
				  Foreground="{TemplateBinding Foreground}"
				  FontSize="{TemplateBinding FontSize}"
				  FontFamily="{TemplateBinding FontFamily}"
				  FontWeight="{TemplateBinding FontWeight}"
				  FontStretch="{TemplateBinding FontStretch}"
				  FontStyle="{TemplateBinding FontStyle}"
				  TextAlignment="Center"
				  MaxWidth="{TemplateBinding Width}"
				  TextWrapping="Wrap"/>
                            </StackPanel>
                            <Rectangle
				x:Name="FocusVisualWhite"
				IsHitTestVisible="False"
				Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
				StrokeEndLineCap="Square"
				StrokeDashArray="1,1"
				Opacity="0"
				StrokeDashOffset="1.5"/>
                            <Rectangle
				x:Name="FocusVisualBlack"
				IsHitTestVisible="False"
				Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
				StrokeEndLineCap="Square"
				StrokeDashArray="1,1"
				Opacity="0"
				StrokeDashOffset="0.5"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
